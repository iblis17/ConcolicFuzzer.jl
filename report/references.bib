@INPROCEEDINGS{Cadar2006-hs,
  title     = "{EXE}: Automatically Generating Inputs of Death",
  booktitle = "Proceedings of the 13th {ACM} Conference on Computer and
               Communications Security",
  author    = "Cadar, Cristian and Ganesh, Vijay and Pawlowski, Peter M and
               Dill, David L and Engler, Dawson R",
  publisher = "ACM",
  pages     = "322--335",
  series    = "CCS '06",
  year      =  2006,
  address   = "New York, NY, USA",
  keywords  = "attack generation, bug finding, constraint solving, dynamic
               analysis, symbolic execution, test case generation"
}

@article{Cadar_Dunbar_Engler, title={KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs}, url={http://hci.stanford.edu/cstr/reports/2008-03.pdf}, author={Cadar, Cristian and Dunbar, Daniel and Engler, Dawson}}

@ARTICLE{Godefroid2005-ld,
  title     = "{DART}: Directed Automated Random Testing",
  author    = "Godefroid, Patrice and Klarlund, Nils and Sen, Koushik",
  journal   = "SIGPLAN Not.",
  publisher = "ACM",
  volume    =  40,
  number    =  6,
  pages     = "213--223",
  month     =  jun,
  year      =  2005,
  address   = "New York, NY, USA",
  keywords  = "automated test generation, interfaces, program verification,
               random testing, software testing"
}

@INPROCEEDINGS{Lattner2004-dv,
  title     = "{LLVM}: A Compilation Framework for Lifelong Program Analysis \&
               Transformation",
  booktitle = "Proceedings of the International Symposium on Code Generation
               and Optimization: Feedback-directed and Runtime Optimization",
  author    = "Lattner, Chris and Adve, Vikram",
  publisher = "IEEE Computer Society",
  pages     = "75--",
  series    = "CGO '04",
  year      =  2004,
  address   = "Washington, DC, USA"
}

@ARTICLE{Bezanson2012-iw,
  title         = "Julia: A Fast Dynamic Language for Technical Computing",
  author        = "Bezanson, Jeff and Karpinski, Stefan and Shah, Viral B and
                   Edelman, Alan",
  abstract      = "Dynamic languages have become popular for scientific
                   computing. They are generally considered highly productive,
                   but lacking in performance. This paper presents Julia, a new
                   dynamic language for technical computing, designed for
                   performance from the beginning by adapting and extending
                   modern programming language techniques. A design based on
                   generic functions and a rich type system simultaneously
                   enables an expressive programming model and successful type
                   inference, leading to good performance for a wide range of
                   programs. This makes it possible for much of the Julia
                   library to be written in Julia itself, while also
                   incorporating best-of-breed C and Fortran libraries.",
  month         =  sep,
  year          =  2012,
  archivePrefix = "arXiv",
  primaryClass  = "cs.PL",
  eprint        = "1209.5145"
}

@MISC{Revels_undated-st,
  title       = "Cassette.jl",
  author      = "Revels, Jarrett",
  year        = "2018",
  institution = "Github",
  url         = "https://github.com/jrevels/Cassette.jl"
}

@MISC{noauthor_undated-iv,
  title       = "Capstan.jl",
  author      = "Revels, Jarrett",
  year        = "2018",
  institution = "Github",
  url         = "https://github.com/JuliaDiff/Capstan.jl"
}
